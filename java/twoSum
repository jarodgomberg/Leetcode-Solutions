/*
  Jarod Gomberg
  Leetcode #1 - twoSum
  10/16/2022
*/


//O(n) solution

class Solution {
    public int[] twoSum(int[] nums, int target) {
        
        Map<Integer, Integer> map = new HashMap<>();
        
        for(int i = 0; i < nums.length; i++) {
            int n = target - nums[i];
            
            if(map.containsKey(n)) {
                return new int[] {map.get(n), i};
            }
            
            map.put(nums[i], i);
        }
        
        throw new IllegalArgumentException("");
    }
}


//Initial solution (brute force)

class Solution {
    public int[] twoSum(int[] nums, int target) {
        
        for(int i = 0; i < nums.length; i++) {
            for(int j = i+1; j < nums.length; j++) {
                int n = target - nums[i];
                
                if(nums[j] == n) {
                    return new int[] {i, j};
                }
            }
        }
        
        throw new IllegalArgumentException("");
    }
}
